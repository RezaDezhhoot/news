version: '3.8'
services:
  nodejs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: on-failure
    working_dir: /app
    ports:
      - '3000:3000'
    volumes:
      - ./src:/app/src
    depends_on:
      - mongo
      - redis
    command: npm run dev
    deploy:
      replicas: 1
      update_config:
        delay: 5s
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.hostname == slave1]
    environment:
      MONGO_URI: mongodb://admin:root@mongodb/admin?authSource=admin&directConnection=true
      REDIS_URL: redis://:@redisService:6379
    networks:
      - main

  mongo:
    image: mongo
    container_name: mongodb
    restart: on-failure
    command: --auth
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_DATABASE: admin
      MONGO_INITDB_ROOT_PASSWORD: root
    deploy:
      replicas: 1
      update_config:
        delay: 5s
        parallelism: 3
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.hostname == master]
    networks:
      - main

  redis:
    image: redis:7.2.1
    container_name: redisService
    restart: on-failure
    ports:
      - '6379:6379'
    networks:
      - main
    deploy:
      replicas: 1
      update_config:
        delay: 5s
        parallelism: 3
      restart_policy:
        condition: on-failure
      placement:
        constraints: [ node.hostname == master ]
volumes:
  mongo-data:

networks:
  main:
    driver: overlay
    name: main